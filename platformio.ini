; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = esp32dev

[env:esp32dev]
platform = platformio/espressif32
framework = arduino, espidf
board = esp32dev
board_build.flash_mode = dout
monitor_speed = 115200
upload_speed = 921600

; library dependencies
lib_deps = tzapu/WiFiManager

# Note: We add CONFIG_SPI_FLASH_DANGEROUS_WRITE_ALLOWED but it needs to
#       be set with esp-idf's menuconfig too.

; build flags
build_flags = 
	-Wno-sign-compare
	-Wno-unused-but-set-variable
	-Wno-unused-variable
	-Wno-macro-redefined
	-fno-exceptions
	-D CORE_DEBUG_LEVEL=0
	-D NDEBUG
	-Wno-attributes
	-DCONFIG_SPI_FLASH_DANGEROUS_WRITE_ALLOWED=1

; unset these build flags
build_unflags =
    -DCONFIG_SPI_FLASH_WRITING_DANGEROUS_REGIONS_ABORTS

; when locally installing, use the partitions like WLED used to have
board_build.partitions = partitions/previous.csv # should work, basic -> it does
# board_build.partitions = partitions/default_4mb.csv # should work -> it does
# board_build.partitions = partitions/huge_app.csv # should fail, only 1 app -> it does
# board_build.partitions = partitions/max_app_4mb.csv # should fail, only 1 app -> it does
# board_build.partitions = partitions/min_spiffs.csv # should fail, already large enough -> it does
# board_build.partitions = partitions/nofs.csv # should fail, too small data -> it does
# board_build.partitions = partitions/tinyuf2.csv # should work, moves 2 data -> it does
# board_build.partitions = partitions/zigbee.csv # should work -> it does
